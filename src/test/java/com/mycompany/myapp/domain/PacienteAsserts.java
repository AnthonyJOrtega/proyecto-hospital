package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PacienteAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPacienteAllPropertiesEquals(Paciente expected, Paciente actual) {
        assertPacienteAutoGeneratedPropertiesEquals(expected, actual);
        assertPacienteAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPacienteAllUpdatablePropertiesEquals(Paciente expected, Paciente actual) {
        assertPacienteUpdatableFieldsEquals(expected, actual);
        assertPacienteUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPacienteAutoGeneratedPropertiesEquals(Paciente expected, Paciente actual) {
        assertThat(actual)
            .as("Verify Paciente auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPacienteUpdatableFieldsEquals(Paciente expected, Paciente actual) {
        assertThat(actual)
            .as("Verify Paciente relevant properties")
            .satisfies(a -> assertThat(a.getNombre()).as("check nombre").isEqualTo(expected.getNombre()))
            .satisfies(a -> assertThat(a.getApellido()).as("check apellido").isEqualTo(expected.getApellido()))
            .satisfies(a -> assertThat(a.getDni()).as("check dni").isEqualTo(expected.getDni()))
            .satisfies(a -> assertThat(a.getSeguroMedico()).as("check seguroMedico").isEqualTo(expected.getSeguroMedico()))
            .satisfies(a -> assertThat(a.getFechaNacimiento()).as("check fechaNacimiento").isEqualTo(expected.getFechaNacimiento()))
            .satisfies(a -> assertThat(a.getTelefono()).as("check telefono").isEqualTo(expected.getTelefono()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPacienteUpdatableRelationshipsEquals(Paciente expected, Paciente actual) {
        assertThat(actual)
            .as("Verify Paciente relationships")
            .satisfies(a -> assertThat(a.getTrabajadors()).as("check trabajadors").isEqualTo(expected.getTrabajadors()))
            .satisfies(a -> assertThat(a.getDireccions()).as("check direccions").isEqualTo(expected.getDireccions()));
    }
}
