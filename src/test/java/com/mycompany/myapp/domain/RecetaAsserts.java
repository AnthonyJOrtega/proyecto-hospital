package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RecetaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecetaAllPropertiesEquals(Receta expected, Receta actual) {
        assertRecetaAutoGeneratedPropertiesEquals(expected, actual);
        assertRecetaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecetaAllUpdatablePropertiesEquals(Receta expected, Receta actual) {
        assertRecetaUpdatableFieldsEquals(expected, actual);
        assertRecetaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecetaAutoGeneratedPropertiesEquals(Receta expected, Receta actual) {
        assertThat(actual)
            .as("Verify Receta auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecetaUpdatableFieldsEquals(Receta expected, Receta actual) {
        assertThat(actual)
            .as("Verify Receta relevant properties")
            .satisfies(a -> assertThat(a.getFechaInicio()).as("check fechaInicio").isEqualTo(expected.getFechaInicio()))
            .satisfies(a -> assertThat(a.getFechaFin()).as("check fechaFin").isEqualTo(expected.getFechaFin()))
            .satisfies(a -> assertThat(a.getInstrucciones()).as("check instrucciones").isEqualTo(expected.getInstrucciones()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecetaUpdatableRelationshipsEquals(Receta expected, Receta actual) {
        assertThat(actual)
            .as("Verify Receta relationships")
            .satisfies(a -> assertThat(a.getPaciente()).as("check paciente").isEqualTo(expected.getPaciente()))
            .satisfies(a -> assertThat(a.getTrabajador()).as("check trabajador").isEqualTo(expected.getTrabajador()))
            .satisfies(a -> assertThat(a.getMedicamentos()).as("check medicamentos").isEqualTo(expected.getMedicamentos()));
    }
}
